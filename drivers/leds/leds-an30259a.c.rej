diff a/drivers/leds/leds-an30259a.c b/drivers/leds/leds-an30259a.c	(rejected hunks)
@@ -592,19 +605,54 @@ static ssize_t store_an30259a_led_blink(struct device *dev,
 	led_b_brightness = ((u32)led_brightness & LED_B_MASK);
 
 	an30259a_set_led_blink(LED_R, delay_on_time,
-				delay_off_time, led_r_brightness, false);
+				delay_off_time, led_r_brightness);
 	an30259a_set_led_blink(LED_G, delay_on_time,
-				delay_off_time, led_g_brightness, false);
+				delay_off_time, led_g_brightness);
 	an30259a_set_led_blink(LED_B, delay_on_time,
-				delay_off_time, led_b_brightness, false);
+				delay_off_time, led_b_brightness);
 
 	leds_i2c_write_all(data->client);
 
-	printk(KERN_DEBUG "led_blink is called, Brightness:0x%X", led_brightness);
+	printk(KERN_DEBUG "led_blink is called, Color:0x%X Brightness:%i\n",
+			led_brightness, LED_DYNAMIC_CURRENT);
 
 	return count;
 }
 
+void an30259a_led_blink(int rgb, int on, int off)
+{
+	int retval;
+	unsigned int led_brightness = rgb;
+	unsigned int delay_on_time = on;
+	unsigned int delay_off_time = off;
+
+	u8 led_r_brightness = 0;
+	u8 led_g_brightness = 0;
+	u8 led_b_brightness = 0;
+
+	/*Reset an30259a*/
+	an30259a_start_led_pattern(LED_OFF);
+
+	/*Set LED blink mode*/
+	led_r_brightness = ((u32)led_brightness & LED_R_MASK)
+					>> LED_R_SHIFT;
+	led_g_brightness = ((u32)led_brightness & LED_G_MASK)
+					>> LED_G_SHIFT;
+	led_b_brightness = ((u32)led_brightness & LED_B_MASK);
+
+	an30259a_set_led_blink(LED_R, delay_on_time,
+				delay_off_time, led_r_brightness);
+	an30259a_set_led_blink(LED_G, delay_on_time,
+				delay_off_time, led_g_brightness);
+	an30259a_set_led_blink(LED_B, delay_on_time,
+				delay_off_time, led_b_brightness);
+
+	leds_i2c_write_all(b_client);
+
+	printk(KERN_DEBUG "led_blink is called, Color:0x%X Brightness:%i\n",
+			led_brightness, LED_DYNAMIC_CURRENT);
+}
+EXPORT_SYMBOL(an30259a_led_blink);
 
 static ssize_t store_led_r(struct device *dev,
 	struct device_attribute *devattr, const char *buf, size_t count)
